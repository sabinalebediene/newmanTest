{
	"info": {
		"_postman_id": "1cd38d87-ab4b-406d-a985-9e7368ca3119",
		"name": "API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Gell all products",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Apple\",\r\n    \"count\": 10,\r\n    \"price\": 0.99\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/products",
					"host": [
						"{{domain}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get lrytas homepage",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/comments",
					"host": [
						"{{domain}}"
					],
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/products/3",
					"host": [
						"{{domain}}"
					],
					"path": [
						"products",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{domain}}/products/9",
					"host": [
						"{{domain}}"
					],
					"path": [
						"products",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Non existing products - negative test",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{domain}}/products/9",
					"host": [
						"{{domain}}"
					],
					"path": [
						"products",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Body contain string test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"count\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/products",
					"host": [
						"{{domain}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiny validator",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"integer\"\r",
							"    },\r",
							"    // \"properties\": {\r",
							"    //         \"title\": { \"type\": \"integer\"}\r",
							"    // }\r",
							"    \r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/products",
					"host": [
						"{{domain}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get postman homepage",
			"request": {
				"method": "GET",
				"header": [],
				"url": null
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "domain",
			"value": "http://localhost:3000"
		}
	]
}
